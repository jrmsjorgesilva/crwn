{"ast":null,"code":"var _jsxFileName = \"/Users/zakwan/Desktop/crwn/src/pages/shop/shop.component.jsx\";\nimport React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport CollectionPage from \"../collection/collection.component\";\nimport CollectionOverview from \"../../components/collections-overview/collections-overview.component\";\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.action\";\nimport { selectIsCollectionFetching, selectIsCollectionLoaded } from \"../../redux/shop/shop.selectors\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends Component {\n  componentDidMount() {\n    const fetchCollectionsStartAsync = this.props.fetchCollectionsStartAsync;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const _this$props = this.props,\n          match = _this$props.match,\n          isCollectionFetching = _this$props.isCollectionFetching,\n          isCollectionLoaded = _this$props.isCollectionLoaded;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      render: props => React.createElement(CollectionOverviewWithSpinner, Object.assign({\n        isLoading: isCollectionFetching\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: isCollectionLoaded\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching,\n  isCollectionLoaded: selectIsCollectionLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/zakwan/Desktop/crwn/src/pages/shop/shop.component.jsx"],"names":["React","Component","Route","connect","createStructuredSelector","CollectionPage","CollectionOverview","fetchCollectionsStartAsync","selectIsCollectionFetching","selectIsCollectionLoaded","WithSpinner","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","componentDidMount","props","render","match","isCollectionFetching","isCollectionLoaded","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,kBAAP,MAA+B,sEAA/B;AAEA,SAASC,0BAAT,QAA2C,8BAA3C;AACA,SACEC,0BADF,EAEEC,wBAFF,QAGO,iCAHP;AAKA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,MAAMC,6BAA6B,GAAGD,WAAW,CAACJ,kBAAD,CAAjD;AACA,MAAMM,yBAAyB,GAAGF,WAAW,CAACL,cAAD,CAA7C;;AAEA,MAAMQ,QAAN,SAAuBZ,SAAvB,CAAiC;AAC/Ba,EAAAA,iBAAiB,GAAG;AAAA,UACVP,0BADU,GACqB,KAAKQ,KAD1B,CACVR,0BADU;AAElBA,IAAAA,0BAA0B;AAC3B;;AAEDS,EAAAA,MAAM,GAAG;AAAA,wBACqD,KAAKD,KAD1D;AAAA,UACCE,KADD,eACCA,KADD;AAAA,UACQC,oBADR,eACQA,oBADR;AAAA,UAC8BC,kBAD9B,eAC8BA,kBAD9B;AAEP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,YAAKF,KAAK,CAACG,IAAX,CAFN;AAGE,MAAA,MAAM,EAAEL,KAAK,IACX,oBAAC,6BAAD;AACE,QAAA,SAAS,EAAEG;AADb,SAEMH,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAWE,oBAAC,KAAD;AACE,MAAA,IAAI,YAAKE,KAAK,CAACG,IAAX,mBADN;AAEE,MAAA,MAAM,EAAEL,KAAK,IACX,oBAAC,yBAAD;AACE,QAAA,SAAS,EAAEI;AADb,SAEMJ,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,CADF;AAuBD;;AA/B8B;;AAkCjC,MAAMM,eAAe,GAAGjB,wBAAwB,CAAC;AAC/Cc,EAAAA,oBAAoB,EAAEV,0BADyB;AAE/CW,EAAAA,kBAAkB,EAAEV;AAF2B,CAAD,CAAhD;;AAKA,MAAMa,kBAAkB,GAAGC,QAAQ,KAAK;AACtChB,EAAAA,0BAA0B,EAAE,MAAMgB,QAAQ,CAAChB,0BAA0B,EAA3B;AADJ,CAAL,CAAnC;;AAIA,eAAeJ,OAAO,CACpBkB,eADoB,EAEpBC,kBAFoB,CAAP,CAGbT,QAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\n\nimport CollectionPage from \"../collection/collection.component\";\nimport CollectionOverview from \"../../components/collections-overview/collections-overview.component\";\n\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.action\";\nimport {\n  selectIsCollectionFetching,\n  selectIsCollectionLoaded\n} from \"../../redux/shop/shop.selectors\";\n\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\n\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends Component {\n  componentDidMount() {\n    const { fetchCollectionsStartAsync } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const { match, isCollectionFetching, isCollectionLoaded } = this.props;\n    return (\n      <div className=\"shop-page\">\n        <Route\n          exact\n          path={`${match.path}`}\n          render={props => (\n            <CollectionOverviewWithSpinner\n              isLoading={isCollectionFetching}\n              {...props}\n            />\n          )}\n        />\n        <Route\n          path={`${match.path}/:collectionId`}\n          render={props => (\n            <CollectionPageWithSpinner\n              isLoading={isCollectionLoaded}\n              {...props}\n            />\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching,\n  isCollectionLoaded: selectIsCollectionLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}