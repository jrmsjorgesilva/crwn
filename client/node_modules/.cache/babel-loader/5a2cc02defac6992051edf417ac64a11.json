{"ast":null,"code":"import shopActionTypes from \"./shop.types\";\nimport { firestore, convertCollectionSnapshotToMap } from \"../../firebase/firebase.utils\";\nexport const fetchCollectionsStart = () => ({\n  type: shopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionMaps => ({\n  type: shopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionMaps\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection(\"collection\");\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionMap = convertCollectionSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionMap));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/zakwan/Desktop/crwn/src/redux/shop/shop.action.js"],"names":["shopActionTypes","firestore","convertCollectionSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionMaps","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","collectionMap"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SACEC,SADF,EAEEC,8BAFF,QAGO,+BAHP;AAKA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AAC1CC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADoB,CAAP,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAGC,cAAc,KAAK;AACxDH,EAAAA,IAAI,EAAEJ,eAAe,CAACQ,yBADkC;AAExDC,EAAAA,OAAO,EAAEF;AAF+C,CAAL,CAA9C;AAKP,OAAO,MAAMG,0BAA0B,GAAG,MAAM;AAC9C,SAAOC,QAAQ,IAAI;AACjB,UAAMC,aAAa,GAAGX,SAAS,CAACY,UAAV,CAAqB,YAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACR,qBAAqB,EAAtB,CAAR;AACAS,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACnC,YAAMC,aAAa,GAAGf,8BAA8B,CAACc,QAAD,CAApD;AACAL,MAAAA,QAAQ,CAACL,uBAAuB,CAACW,aAAD,CAAxB,CAAR;AACD,KAHD;AAID,GAPD;AAQD,CATM","sourcesContent":["import shopActionTypes from \"./shop.types\";\nimport {\n  firestore,\n  convertCollectionSnapshotToMap\n} from \"../../firebase/firebase.utils\";\n\nexport const fetchCollectionsStart = () => ({\n  type: shopActionTypes.FETCH_COLLECTIONS_START\n});\n\nexport const fetchCollectionsSuccess = collectionMaps => ({\n  type: shopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionMaps\n});\n\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection(\"collection\");\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionMap = convertCollectionSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionMap));\n    });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}